---
const {
  project,
  sponsorPrefix = "Kickstarted by ",
  priority = false
} = Astro.props;

if (!project) throw new Error("ProjectCard requires a `project` prop");

const title = project.title ?? "";
const dateLabel = project.dateLabel ?? "";

// Build canonical detail URL
const detailHref = project?.catSlug && project?.subSlug && project?.slug
  ? `/projects/${project.catSlug}/${project.subSlug}/${project.slug}`
  : (project?.slug ? `/projects/${project.slug}` : '#');

// Kickstarted by: prefer precomputed string; fallback to raw object
let kickstarterName = project.kickstarterName || "";
if (!kickstarterName && project.kickstartedBy) {
  const m = project.kickstartedBy.member || {};
  kickstarterName =
    m.displayName || m.fullName || m.name || m.title ||
    ((m.firstName && m.lastName) ? `${m.firstName} ${m.lastName}` : "") ||
    project.kickstartedBy.name || "";
}

// Volunteers: hide when 0/missing
const volunteers = Number.isFinite(project.volunteers) ? Number(project.volunteers) : 0;
const showVolunteers = volunteers > 0;

// Views: hide when 0
const views = Number.isFinite(project.views) ? Number(project.views) : 0;
const showViews = views > 0;
const fmtViews = (n) => n >= 1000 ? `${(Math.round(n / 100) / 10).toFixed(1).replace(/\.0$/, '')}k` : new Intl.NumberFormat('en-AU').format(n);

// Images: show 2 tiles, show “+N” on the last tile if more
const all = Array.isArray(project.images) ? project.images : [];
const visible = all.slice(0, 2);
const extra = Math.max(0, all.length - visible.length);

const withParams = (url, q) => url ? url + (url.includes("?") ? "&" : "?") + q : null;

// image perf flags
const loadingAttr = priority ? 'eager' : 'lazy';
const fetchPrio   = priority ? 'high'  : 'low';
const sizesAttr   = '(max-width:560px) 45vw, 240px';
---

<article class="project-card" data-project data-id={project.id ?? ''} aria-label={title}>
  <ul class="gallery" role="list">
    {visible.length
      ? visible.map((u, idx) => {
          const thumb1x = withParams(u, "w=360&h=270&fit=crop&auto=format");
          const thumb2x = withParams(u, "w=720&h=540&fit=crop&auto=format");
          const isLast  = idx === visible.length - 1 && extra > 0;
          return (
            <li>
              <a
                class={`g-thumb${isLast ? " has-more" : ""}`}
                href={detailHref}
                aria-label={`View ${title}`}
              >
                <img
                  src={thumb1x}
                  srcset={`${thumb1x} 1x, ${thumb2x} 2x`}
                  sizes={sizesAttr}
                  width="360" height="270"
                  loading={loadingAttr}
                  fetchpriority={fetchPrio}
                  decoding="async"
                  alt=""
                />
                {isLast && <span class="more-badge">+{extra}</span>}
              </a>
            </li>
          );
        })
      : (
        <li>
          <a class="g-thumb placeholder" href={detailHref} aria-label={`View ${title}`}>
            <svg viewBox="0 0 48 36" class="ph" role="img" aria-label="No image">
              <rect width="48" height="36" fill="#eef1f5"></rect>
              <path d="M10 25l7-8 6 7 5-5 10 11H10z" fill="#d8dee6"></path>
              <circle cx="16" cy="14" r="3" fill="#d8dee6"></circle>
            </svg>
          </a>
        </li>
      )
    }
  </ul>

  <header class="meta">
    <h3><a href={detailHref}>{title}</a></h3>
    <ul class="project-stamp">
      {dateLabel && <li><time>{dateLabel}</time></li>}
      {kickstarterName && <li>{sponsorPrefix}<span>{kickstarterName}</span></li>}
      {showVolunteers && <li>{volunteers} {volunteers === 1 ? "Volunteer" : "Volunteers"}</li>}
      {showViews && <li aria-label={`${views} views`}>{fmtViews(views)} views</li>}
    </ul>
  </header>
</article>
