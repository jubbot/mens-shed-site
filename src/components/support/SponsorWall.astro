---
import { sanity } from '../../lib/sanityClient';

const QUERY = /* groq */ `
{
  "projectPartner": *[_type=="sponsor" && active==true && tier=="project-partner"]
    | order(coalesce(sort, 9999) asc, name asc){
      _id, name, website, inKind,
      "src": logo.asset->url,
      "alt": coalesce(logo.alt, name + " logo")
    },
  "gold": *[_type=="sponsor" && active==true && tier=="gold"]
    | order(coalesce(sort, 9999) asc, name asc){
      _id, name, website, inKind,
      "src": logo.asset->url,
      "alt": coalesce(logo.alt, name + " logo")
    },
  "silver": *[_type=="sponsor" && active==true && tier=="silver"]
    | order(coalesce(sort, 9999) asc, name asc){
      _id, name, website, inKind,
      "src": logo.asset->url,
      "alt": coalesce(logo.alt, name + " logo")
    },
  "bronze": *[_type=="sponsor" && active==true && tier=="bronze"]
    | order(coalesce(sort, 9999) asc, name asc){
      _id, name, website, inKind,
      "src": logo.asset->url,
      "alt": coalesce(logo.alt, name + " logo")
    }
}
`;

type Row = {
  _id: string;
  name: string;
  website?: string;
  src?: string;
  alt: string;
  inKind?: boolean;
};

const data = await sanity.fetch<Record<'projectPartner'|'gold'|'silver'|'bronze', Row[]>>(QUERY);

// Optional helper to append lightweight params without urlFor
const withParams = (u?: string, p = 'auto=format&fit=max&w=420') => (u ? `${u}?${p}` : undefined);
---

<div class="current-sponsor">
  {data.projectPartner?.length > 0 && (
    <>
      <h3>Project Partners</h3>
      <div class="sponsor-wall">
        {data.projectPartner.map((s) => (
          <div class="sponsor" title={s.name}>
            {s.website ? (
              <a href={s.website} target="_blank" rel="noopener">
                <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
              </a>
            ) : (
              <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
            )}
          </div>
        ))}
      </div>
    </>
  )}

  {data.gold?.length > 0 && (
    <>
      <h3>Gold Sponsors</h3>
      <div class="sponsor-wall">
        {data.gold.map((s) => (
          <div class="sponsor" title={s.name}>
            {s.website ? (
              <a href={s.website} target="_blank" rel="noopener">
                <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
              </a>
            ) : (
              <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
            )}
          </div>
        ))}
      </div>
    </>
  )}

  {data.silver?.length > 0 && (
    <>
      <h3>Silver Sponsors</h3>
      <div class="sponsor-wall">
        {data.silver.map((s) => (
          <div class="sponsor" title={s.name}>
            {s.website ? (
              <a href={s.website} target="_blank" rel="noopener">
                <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
              </a>
            ) : (
              <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
            )}
          </div>
        ))}
      </div>
    </>
  )}

  {data.bronze?.length > 0 && (
    <>
      <h3>Bronze Sponsors</h3>
      <div class="sponsor-wall">
        {data.bronze.map((s) => (
          <div class="sponsor" title={s.name}>
            {s.website ? (
              <a href={s.website} target="_blank" rel="noopener">
                <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
              </a>
            ) : (
              <img src={withParams(s.src)} alt={s.alt} loading="lazy" decoding="async" />
            )}
          </div>
        ))}
      </div>
    </>
  )}
</div>
