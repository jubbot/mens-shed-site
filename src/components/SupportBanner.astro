---
/**
 * SupportBanner.astro
 *
 * Props:
 * - title?: string                // Page title (e.g., "Volunteer")
 * - description?: string          // Short intro paragraph
 * - stats?: Array<{ label:string, value:number|string }>
 * - links?: Array<{ href:string, label:string, icon?:string }>
 * - loadStatsFrom?: 'api'|'props'|'none'  // Default 'api' (SSR fetch)
 * - tipTitle?, tipText?, tipHref?, tipLabel?, tipIcon?
 *
 * Notes:
 * - Uses your grid classes (l-*, m-*, s-*)
 * - Highlights active child link via Astro.url.pathname
 */

export interface Stat { label: string; value: number | string; suffix?: string }

const {
  title = 'Support',
  description = 'Townsville men generously volunteer their time and expertise to support local community projects — and they’re seeking your support to continue making a difference.',
  stats: statsProp,
  links: linksProp,
  loadStatsFrom = 'api',
  tipTitle = 'How to support us',
  tipText = 'Every contribution helps us fund materials, maintain equipment, and deliver more community projects.',
  tipHref = '/about/governance',
  tipLabel = 'Policies & reports',
  tipIcon = 'wt-file1',
} = Astro.props;

const PATH = Astro.url.pathname;

const CHILD_LINKS = linksProp ?? [
  { href: '/support/sponsor',                 label: 'Sponsor',                    icon: 'wt-award' },
  { href: '/support/donate',                  label: 'Donate',                     icon: 'wt-coins' },
  { href: '/support/volunteer',               label: 'Volunteer',                  icon: 'wt-group' },
  { href: '/support/wishlist',                label: 'Wishlist',                   icon: 'wt-list' },
  { href: '/support/donate-tools-materials',  label: 'Donate Tools & Materials',   icon: 'wt-toolbox' },
];

let resolvedStats: Stat[] | null = statsProp ?? null;

if (!resolvedStats && loadStatsFrom === 'api') {
  try {
    const base = Astro.url.origin;
    const res = await fetch(`${base}/api/support/stats.json`, { cache: 'no-store' });
    const data = await res.json();
    if (data?.ok && Array.isArray(data.stats)) {
      resolvedStats = data.stats;
    }
  } catch {
    // swallow; we’ll use fallbacks below
  }
}

if (!resolvedStats) {
  resolvedStats = [
    { label: 'Active Members',     value: '—' },
    { label: 'Volunteer Hours',    value: '—' },
    { label: 'Community Projects', value: '—' },
  ];
}
---

<div class="grid banner support-banner">
  <div class="l-8 m-8 s-12">
    <nav class="crumbset" aria-label="Breadcrumb">
      <a href="/support">Support</a>
      {title && title.toLowerCase() !== 'support' ? <span aria-hidden="true"> / </span> : null}
      {title && title.toLowerCase() !== 'support' ? <span aria-current="page">{title}</span> : null}
    </nav>

    <h1 class="l-txt">{title}</h1>
    {description ? <p class="intro">{description}</p> : null}

 
    <div class="statistic grid">
      {resolvedStats.map((s) => (
        <div class="figure">
          <span class="num">{s.value}</span>
          <span class="label">{s.label}</span>
        </div>
      ))}
    </div>
  </div>

  <div class="l-4 m-4 s-12">
    <aside class="tipbox">
      <h3>{tipTitle}</h3>
      <p>{tipText}</p>
      <a class="btn btn-delta" href={tipHref}>
        <i class={tipIcon}></i> {tipLabel}
      </a>
    </aside>
  </div>
</div>

<style lang="scss">
.support-banner {
  .crumbset {
    margin-bottom: .5rem;
    a { text-decoration: none; }
    span[aria-current="page"] { font-weight: 600; }
  }

  .intro { margin: .5rem 0 1rem; }
 
  .statistic.grid {
    margin-top: 1rem;
    gap: 1rem;
    .figure {
      background: var(--panel, #f8f8f8);
      border: 1px solid var(--border, #e5e5e5);
      border-radius: .75rem;
      padding: .75rem 1rem;
      .num   { display: block; font-size: clamp(1.5rem, 3.2vw, 2.25rem); font-weight: 800; line-height: 1.1; }
      .label { display: block; margin-top: .25rem; font-size: .95rem; opacity: .8; }
    }
  }

  .tipbox {
    background: var(--panel, #f8f8f8);
    border: 1px solid var(--border, #e5e5e5);
    border-radius: .75rem;
    padding: 1rem;
    h3 { margin: 0 0 .5rem; }
    p { margin: 0 0 .75rem; }
  }
}
</style>
