---
const { event } = Astro.props;
/**
 * Expected:
 * event.slug, event.title, event.description, event.location,
 * event.start (ISO), event.end (ISO)
 */

function toGoogleDateUTC(iso) {
  const d = new Date(iso);
  const pad = (n) => String(n).padStart(2, "0");
  const y = d.getUTCFullYear();
  const m = pad(d.getUTCMonth() + 1);
  const day = pad(d.getUTCDate());
  const h = pad(d.getUTCHours());
  const min = pad(d.getUTCMinutes());
  const s = pad(d.getUTCSeconds());
  return `${y}${m}${day}T${h}${min}${s}Z`;
}

const startUTC = toGoogleDateUTC(event.start);
const endUTC   = toGoogleDateUTC(event.end);

const google = new URL("https://calendar.google.com/calendar/render");
google.searchParams.set("action", "TEMPLATE");
google.searchParams.set("text", event.title || "");
google.searchParams.set("dates", `${startUTC}/${endUTC}`);
google.searchParams.set("details", (event.description || "").replace(/\s+/g, " ").trim());
google.searchParams.set("location", event.location || "");
google.searchParams.set("ctz", "Australia/Brisbane");

const icsHref = `/events/${event.slug}.ics`; // served by your [slug].ics.ts endpoint
const googleHref = google.toString();
---

<div class="atc">
  <!-- Minimal single button: defaults to ICS (good fallback on iOS/macOS) -->
  <a id="atc-btn" class="btn"
     href={icsHref}
     data-ics={icsHref}
     data-google={googleHref}
     rel="noopener">Add to calendar</a>

  <!-- Optional tiny dropdown (kept hidden unless opened) -->
  <details class="atc-more">
    <summary aria-label="More calendar options"></summary>
    <nav class="atc-menu">
      <a href={googleHref} target="_blank" rel="noopener">Google Calendar</a>
      <a href={icsHref}>Apple / Outlook (.ics)</a>
    </nav>
  </details>
</div>

<style>
  .atc { display: inline-flex; align-items: center; gap: .25rem; }
  .btn { display:inline-block; padding:.6rem .9rem; border-radius:.6rem; border:1px solid var(--border, #ddd); }
  .atc-more > summary {
    width: 1.75rem; height: 2.4rem; cursor: pointer;
    border:1px solid var(--border, #ddd); border-radius:.6rem;
    display:inline-flex; align-items:center; justify-content:center;
  }
  .atc-more[open] .atc-menu { display: grid; }
  .atc-menu {
    display:none; position:absolute; margin-top:.25rem; padding:.35rem;
    border:1px solid var(--border, #ddd); border-radius:.6rem; background:#fff;
    box-shadow: 0 10px 24px rgba(0,0,0,.08);
  }
  .atc-menu a { padding:.4rem .6rem; border-radius:.4rem; white-space:nowrap; }
  .atc-menu a:hover { background:#f6f6f6; }
  .atc { position: relative; }
</style>

<script>
  // Swap the primary button target based on platform.
  (function(){
    const a = document.getElementById('atc-btn');
    if (!a) return;

    const isApple = /iPhone|iPad|iPod|Macintosh/.test(navigator.userAgent) && !/Android/.test(navigator.userAgent);
    const google = a.getAttribute('data-google');
    const ics = a.getAttribute('data-ics');

    if (isApple) {
      a.href = ics;                // Apple Calendar / Outlook
      a.removeAttribute('target'); // open in same tab (iOS handles .ics)
    } else {
      a.href = google;             // Google Calendar
      a.target = '_blank';
      a.rel = 'noopener';
    }
  })();
</script>
