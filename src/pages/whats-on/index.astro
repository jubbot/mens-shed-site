---
export const prerender = false;
import Layout from '../../layouts/Layout.astro';
import EventCard from '../../components/EventCard.astro';
import WhatsOnBanner from '../../components/WhatsOnBanner.astro';
import { sanity } from '../../lib/sanityClient';


const TYPE_TO_SEGMENT = {
  socialEvent: 'social-event',
  workshop: 'workshop',
  creative: 'creative-activity',
};
const TYPE_LABEL = {
  socialEvent: 'Social Events',
  workshop: 'Workshops & Skill Building',
  creative: 'Creative Activities',
};

const EVENTS_QUERY = `*[_type == "whatsOn"]{
  _id,
  title,
  "slug": slug.current,
  type,
  location,
  startTime,
  endTime,
  hasSeatLimit,
  seatCapacity,
  seatsReserved,
  allowWaitlist,
  firstThumbnail{asset->{url}, alt},
  secondThumbnail{asset->{url}, alt}
} | order(startTime asc)`;

let events = [];
try {
  events = await sanity.fetch(EVENTS_QUERY);
} catch (e) {
  events = [];
}

// compute spotsLeft here so cards can show it if they want
for (const ev of events) {
  ev.spotsLeft = ev.hasSeatLimit
    ? Math.max(0, Number(ev.seatCapacity || 0) - Number(ev.seatsReserved || 0))
    : null;
  ev.isSoldOut = !!ev.hasSeatLimit && (ev.spotsLeft ?? 0) <= 0;
}

// group by type
const eventsByType = {
  socialEvent: [],
  workshop: [],
  creative: [],
};
for (const ev of events) {
  if (eventsByType[ev.type]) eventsByType[ev.type].push(ev);
}

// choose the order sections appear
const sections = ['socialEvent', 'workshop', 'creative'];
---

<Layout>
  <div class="wrapper">
   <WhatsOnBanner/>

      {sections.map((key) => (
      eventsByType[key]?.length ? (
        <section class="category-block">
          <div class="subheading">
            <h2>{TYPE_LABEL[key]}</h2>
            <a class="btn btn-delta see-all" href={`/whats-on/${TYPE_TO_SEGMENT[key]}`}><i class="wt-eye"></i> See all</a>
          </div>

        <div class="card-group">
  {eventsByType[key].map((event) => (
    <EventCard
      event={event}
      href={`/whats-on/${TYPE_TO_SEGMENT[event.type]}/${event.slug}`}
    />
  ))}
</div>

        </section>
      ) : null
    ))}
  </div>
    <script is:inline>
  import { trackHit } from '../../lib/track.ts';
  trackHit({ section: 'whats-on', category: null, slug: null, path: location.pathname });
</script>
</Layout>
