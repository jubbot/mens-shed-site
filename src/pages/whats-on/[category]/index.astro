---
// src/pages/whats-on/[category]/index.astro
export const prerender = false;

import Layout from '../../../layouts/Layout.astro';
import EventCard from '../../../components/EventCard.astro';
import WhatsOnBanner from '../../../components/WhatsOnBanner.astro';
import { sanity } from '../../../lib/sanityClient';

const { category } = Astro.params;

const SEGMENT_TO_TYPE = {
  'social-event': 'socialEvent',
  'workshop': 'workshop',
  'creative-activity': 'creative',
};
const TYPE_LABEL = {
  socialEvent: 'Social Events',
  workshop: 'Workshops & Skill Building',
  creative: 'Creative Activities',
};

const type = SEGMENT_TO_TYPE[category];

if (!type) {
  throw new Error('Not Found');
}

const QUERY = `*[_type == "whatsOn" && type == $type]{
  _id,
  title,
  "slug": slug.current,
  type,
  location,
  startTime,
  endTime,
  hasSeatLimit,
  seatCapacity,
  seatsReserved,
  allowWaitlist,
  firstThumbnail{asset->{url}, alt},
  secondThumbnail{asset->{url}, alt}
} | order(startTime asc)`;

let events = [];
try {
  events = await sanity.fetch(QUERY, { type });
} catch (e) {
  events = [];
}

for (const ev of events) {
  ev.spotsLeft = ev.hasSeatLimit
    ? Math.max(0, Number(ev.seatCapacity || 0) - Number(ev.seatsReserved || 0))
    : null;
  ev.isSoldOut = !!ev.hasSeatLimit && (ev.spotsLeft ?? 0) <= 0;
}
---

<Layout title={`What’s On – ${TYPE_LABEL[type]}`}>
  <div class="wrapper">
    <WhatsOnBanner/>

    <h1>{TYPE_LABEL[type]}</h1>

    {events.length ? (
      <div class="card-group">
        {events.map((event) => (
          <EventCard
            event={event}
            href={`/whats-on/${category}/${event.slug}`}   {/* pass link into the card */}
          />
        ))}
      </div>
    ) : (
      <p>No events in this category yet.</p>
    )}
  </div>

  <script is:inline>
    import { trackHit } from '../../../lib/track.ts';
    const cat = Astro.params.category; // 'workshop' | 'social-event' | 'creative-activity'
    trackHit({ section: 'whats-on', category: cat, slug: null, path: location.pathname });
  </script>

</Layout>
