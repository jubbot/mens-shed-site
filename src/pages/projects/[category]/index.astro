---
// src/pages/projects/[category]/index.astro

// ✅ prerender (default) is fine because we provide getStaticPaths
// If you previously set `export const prerender = false`, remove that line.

import Layout from '../../../layouts/Layout.astro';
import { sanity } from '../../../lib/sanityClient';

// 1) Tell Astro which /projects/<category>/ routes to build
export async function getStaticPaths() {
  // Try to read distinct categories from Sanity
  let categories = [];
  try {
    categories = await sanity.fetch(
      // Returns an array of strings if your docs have a string field `category`
      `array::unique(*[_type == "project" && defined(category)].category)`
    );
  } catch (e) {
    categories = [];
  }

  // Fallback categories so the build never fails if Sanity is empty/offline
  const FALLBACK = ['woodwork', 'metalwork', 'creative', 'restoration'];

  const list = Array.isArray(categories) && categories.length
    ? [...new Set(categories.filter(Boolean).map(String))]
    : FALLBACK;

  // IMPORTANT: param name must match the folder segment [category]
  return list.map((category) => ({ params: { category } }));
}

// 2) Page data for the current category
const { category } = Astro.params;

// Adjust this GROQ to match your schema.
// Example assumes docs have fields: title, slug.current, category, cover image, etc.
const PROJECTS_QUERY = `*[_type == "project" && category == $category]{
  _id,
  title,
  "slug": slug.current,
  category,
  excerpt,
  cover{asset->{url}, alt}
} | order(title asc)`;

let projects = [];
try {
  projects = await sanity.fetch(PROJECTS_QUERY, { category });
} catch (e) {
  projects = [];
}

// Simple title mapping (optional)
const label = (s) => (s || '').replace(/-/g,' ').replace(/\b\w/g, m => m.toUpperCase());
const pageTitle = `Projects – ${label(category)}`;
---

<Layout title={pageTitle}>
  <div class="wrapper">
    <h1>{label(category)} Projects</h1>

    {projects.length ? (
      <div class="card-group">
        {projects.map((p) => (
          <a href={`/projects/${category}/${p.slug}`} class="card-link">
            <article class="card">
              <div class="thumb">
                {p.cover?.asset?.url
                  ? <img src={p.cover.asset.url} alt={p.cover?.alt || p.title} loading="lazy" />
                  : <div class="thumb ph" aria-hidden="true"></div>}
              </div>
              <h3>{p.title}</h3>
              {p.excerpt && <p class="muted">{p.excerpt}</p>}
            </article>
          </a>
        ))}
      </div>
    ) : (
      <p>No projects in this category yet.</p>
    )}
  </div>

  <style>
    .card-group { display:grid; grid-template-columns:repeat(auto-fill, minmax(240px,1fr)); gap:1rem; }
    .card { border:1px solid #e5e5e5; border-radius:12px; padding:.75rem; background:#fff; height:100%; }
    .thumb { aspect-ratio: 4/3; overflow:hidden; border-radius:8px; background:#f5f5f5; }
    .thumb img { width:100%; height:100%; object-fit:cover; display:block; }
    .thumb.ph { display:block; }
    .muted { opacity:.8; }
    .card-link { text-decoration:none; color:inherit; }
    .card-link:hover .card { box-shadow: 0 6px 16px rgba(0,0,0,.08); }
  </style>
</Layout>
